#!/bin/bash

apt update
apt install -y default-jre

java_version=$(java -version 2>&1 > /dev/null  | grep "java version\|openjdk version" | awk '{print substr($3,2,2)}')

if [ "$java_version" == "" ]
then
    echo Installing Java has failed. No java version found	
elif [ "$java_version" == "1." ]
then
    echo An old version of Java installation found
elif [ "$java_version" -ge 11 ]
then
    echo Java version 11 or greater installed successfully
fi

# java -version gives you the complete version output.

# 2>&1 > /dev/null addition does following things: with 2>&1 the error output of the java -version command will be discarded by the /dev/null file, and > redirects the output of java -version command to the /dev/null file, which is a special type of file, that accepts and discards all input written to it. So described together, this option takes the output, including any errors generated by the java -version command and discards it, not showing it on the command-line and silently forwarding it using | (pipe) to the next command, which is grep "java version\|openjdk version"


# grep "java version\|openjdk version" simply finds a line in the output that has "java version" or "openjdk version" in it. The example line will look like this: openjdk version "11.0.16" 2022-07-19

# awk '{print substr($3,2,2)} takes the line from the previous output and grabs the third section of the string "11.0.16" and from there grabs the first 2 characters, which will be "11"
